// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product.InventoryManagement.Persistence.DatabaseContext;

#nullable disable

namespace Product.InventoryManagement.Persistence.Migrations
{
    [DbContext(typeof(InventoryDatabaseContext))]
    [Migration("20251003062002_added-transaction-inventory")]
    partial class addedtransactioninventory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Product.InventoryManagement.Domain.Entities.InventoryTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UnitsAdded")
                        .HasColumnType("int");

                    b.Property<int>("UnitsRemoved")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Product.InventoryManagement.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c3ef91e-37db-49d2-948a-04166faab60a"),
                            CreatedAt = new DateTime(2025, 10, 3, 14, 20, 1, 826, DateTimeKind.Local).AddTicks(6445),
                            Description = "Mouse na malibag",
                            Name = "Mouse",
                            Price = 1400.99m,
                            Quantity = 12,
                            UpdatedAt = new DateTime(2025, 10, 3, 14, 20, 1, 827, DateTimeKind.Local).AddTicks(8129)
                        },
                        new
                        {
                            Id = new Guid("3278c754-bbc4-45f5-9a62-b22705aba1c9"),
                            CreatedAt = new DateTime(2025, 10, 3, 14, 20, 1, 827, DateTimeKind.Local).AddTicks(8556),
                            Description = "Keyboard na sira Enter key",
                            Name = "Keyboard",
                            Price = 2250m,
                            Quantity = 6,
                            UpdatedAt = new DateTime(2025, 10, 3, 14, 20, 1, 827, DateTimeKind.Local).AddTicks(8559)
                        },
                        new
                        {
                            Id = new Guid("822a190d-0942-4af3-9c21-376114d90cf5"),
                            CreatedAt = new DateTime(2025, 10, 3, 14, 20, 1, 827, DateTimeKind.Local).AddTicks(8564),
                            Description = "Pwedeng pang halo sa sinigang",
                            Name = "Headphones",
                            Price = 1600.50m,
                            Quantity = 24,
                            UpdatedAt = new DateTime(2025, 10, 3, 14, 20, 1, 827, DateTimeKind.Local).AddTicks(8565)
                        });
                });

            modelBuilder.Entity("Product.InventoryManagement.Domain.Entities.InventoryTransaction", b =>
                {
                    b.HasOne("Product.InventoryManagement.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
