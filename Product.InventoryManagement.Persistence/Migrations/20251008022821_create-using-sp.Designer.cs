// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product.InventoryManagement.Persistence.DatabaseContext;

#nullable disable

namespace Product.InventoryManagement.Persistence.Migrations
{
    [DbContext(typeof(InventoryDatabaseContext))]
    [Migration("20251008022821_create-using-sp")]
    partial class createusingsp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Product.InventoryManagement.Domain.Entities.InventoryTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UnitsAdded")
                        .HasColumnType("int");

                    b.Property<int>("UnitsRemoved")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Product.InventoryManagement.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf8b332e-f622-43e9-ba2e-756cf01dadfc"),
                            CreatedAt = new DateTime(2025, 10, 8, 10, 28, 20, 723, DateTimeKind.Local).AddTicks(675),
                            Description = "Mouse na malibag",
                            Name = "Mouse",
                            Price = 1400.99m,
                            Quantity = 12,
                            UpdatedAt = new DateTime(2025, 10, 8, 10, 28, 20, 724, DateTimeKind.Local).AddTicks(2067)
                        },
                        new
                        {
                            Id = new Guid("e8b37190-5a92-414e-bb40-10b0686c8e55"),
                            CreatedAt = new DateTime(2025, 10, 8, 10, 28, 20, 724, DateTimeKind.Local).AddTicks(2455),
                            Description = "Keyboard na sira Enter key",
                            Name = "Keyboard",
                            Price = 2250m,
                            Quantity = 6,
                            UpdatedAt = new DateTime(2025, 10, 8, 10, 28, 20, 724, DateTimeKind.Local).AddTicks(2457)
                        },
                        new
                        {
                            Id = new Guid("af746c68-72aa-4666-9be5-1bca25e04ee1"),
                            CreatedAt = new DateTime(2025, 10, 8, 10, 28, 20, 724, DateTimeKind.Local).AddTicks(2461),
                            Description = "Pwedeng pang halo sa sinigang",
                            Name = "Headphones",
                            Price = 1600.50m,
                            Quantity = 24,
                            UpdatedAt = new DateTime(2025, 10, 8, 10, 28, 20, 724, DateTimeKind.Local).AddTicks(2462)
                        });
                });

            modelBuilder.Entity("Product.InventoryManagement.Domain.Entities.InventoryTransaction", b =>
                {
                    b.HasOne("Product.InventoryManagement.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
